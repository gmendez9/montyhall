% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/monty-hall-problem.R
\name{play_game}
\alias{play_game}
\title{\itemize{
\item the play game wrapper function
}}
\usage{
play_game()
}
\arguments{
\item{new.game}{<- creates a new game
first.pick <- selects door
opened.door <- references the goat door function and uses the current game and first pick
final pick stay <- represents the change door instructions in case a contestant stays with their initial pick
final pick switch <- represents the change door instructions in case a contestant decides to switch
outcome.stay and outcome.switch leverage the previous two lines of codes to account for the possibilities
strategy is a vector which uses concatenate our stay and switch options
outcomes stores our outcome.stay and outcome.switch functions whihc store our determine winner function
game.switch created a data frame out of strategy and outcome}
}
\value{
\itemize{
\item we are returned with game.results
}
}
\description{
\itemize{
\item Using the functions we've initially created, we package them all together into a single play_game() function which executes each step of a single game in order.
}
}
\details{
\itemize{
\item please refer to previous descriptions. We must account for all pieces of the game inside of the function. We are setting ourselves up for simuulating the game many times.
}
}
\examples{
play_game()

}
